#Использовать logos

Перем Поставщик Экспорт;
Перем Версия Экспорт;
Перем АдресОбновлений Экспорт;
Перем Комментарий Экспорт;
Перем Наименование Экспорт;

Перем КаталогИсходников;
Перем СоответствиеСвойствXML;
Перем ИмяФайлаМетаданныхКонфигурации;
Перем ФайлМетаданныхКонфигурации;

Перем Лог;

Процедура УстановитьКаталогИсходныхФайлов(Знач Каталог) Экспорт
	КаталогИсходников = Каталог;
КонецПроцедуры

Процедура УстановитьФайлМетаданныхКонфигурации(Знач ПутьКФайлу) Экспорт
	
	ФайлМетаданныхКонфигурации = Новый Файл(ПутьКФайлу);
	КаталогИсходников = ФайлМетаданныхКонфигурации.Путь;
	ИмяФайлаМетаданныхКонфигурации = ФайлМетаданныхКонфигурации.Имя;
	
КонецПроцедуры

Функция ПрочитатьМетаданные() Экспорт

	ПрочитатьМетаданныеИзИсходников();

	Возврат ЭтотОбъект;

КонецФункции

Функция ЗаписатьМетаданные(ПринудительноПерезаписать = Ложь) Экспорт

	ЗаписатьМетаданныеВИсходников(ПринудительноПерезаписать);

	Возврат ЭтотОбъект;

КонецФункции

Процедура ПриСозданииОбъекта(Знач Каталог = Неопределено)
	
	Если ЗначениеЗаполнено(Каталог) Тогда
		КаталогИсходников = Каталог;
	КонецЕсли;

	СоответствиеСвойствXML = Новый Соответствие;
	СоответствиеСвойствXML.Вставить("Vendor", "Поставщик");
	СоответствиеСвойствXML.Вставить("Version", "Версия");
	СоответствиеСвойствXML.Вставить("UpdateCatalogAddress", "АдресОбновлений");
	СоответствиеСвойствXML.Вставить("Comment", "Комментарий");
	СоответствиеСвойствXML.Вставить("Name", "Наименование");
	
	ИмяФайлаМетаданныхКонфигурации = "Configuration.xml";

	Лог = Логирование.ПолучитьЛог("oscript.lib.v8metadata-config");
	Лог.УстановитьУровень(УровниЛога.Отладка);

КонецПроцедуры

Процедура НайтиФайлМетаданныхКонфигурации()

	ФайлМетаданныхКонфигурации = Новый Файл(ОбъединитьПути(КаталогИсходников, ИмяФайлаМетаданныхКонфигурации));

	Если Не ФайлМетаданныхКонфигурации.Существует() Тогда 
		ВызватьИсключение СтрШаблон("В каталоге <%1> не найден файл <%2>", КаталогИсходников, ИмяФайлаМетаданныхКонфигурации);
	КонецЕсли;
	  
КонецПроцедуры

Процедура ПрочитатьМетаданныеИзИсходников() 
	
	НайтиФайлМетаданныхКонфигурации();

	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ФайлМетаданныхКонфигурации.ПолноеИмя);

	Пока Чтение.Прочитать() Цикл
		Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента И Чтение.Имя = "Properties" Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Пока Чтение.Прочитать() Цикл
				
		Если Чтение.ТипУзла = ТипУзлаXML.КонецЭлемента
			И Чтение.ЛокальноеИмя = "Properties" Тогда
			Прервать;
		КонецЕсли;
		
		Лог.Отладка("Проверяю ключ <%1>", Чтение.ЛокальноеИмя);
		СвойствоОбъекта = СоответствиеСвойствXML[Чтение.ЛокальноеИмя];
		
		Если СвойствоОбъекта = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Чтение.Прочитать();
		
		Если Чтение.ТипУзла = ТипУзлаXML.Текст Тогда
			ЗначениеСвойства = Чтение.Значение;
		Иначе
			ЗначениеСвойства = "";
		КонецЕсли;

		ЭтотОбъект[СвойствоОбъекта] = ЗначениеСвойства;
		Лог.Отладка("Заполняю свойство <%1> значением <%2>", СвойствоОбъекта, ЗначениеСвойства);
	
	КонецЦикла;

	Чтение.Закрыть();

КонецПроцедуры

// Функция читает опцию из ЧтениеXML
//
Функция ПрочитатьОпцию(Знач Чтение)
	
	Перем Ключ;
	Перем Значение;
	
	Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
		Ключ = Чтение.ЛокальноеИмя;
	КонецЕсли;

	Чтение.Прочитать();

	Если Чтение.ТипУзла = ТипУзлаXML.Текст Тогда
		Значение = Чтение.Значение;
	КонецЕсли;
	
	Пока Чтение.Прочитать()
		И НЕ (Чтение.ТипУзла = ТипУзлаXML.КонецЭлемента И Ключ = Чтение.ЛокальноеИмя) Цикл
		Продолжить;
	КонецЦикла;
	
	Возврат Новый Структура("Ключ, Значение", Ключ, Значение);
	
КонецФункции

// Процедура устанавливает новые параметры в исходники конфигурации
Процедура ЗаписатьМетаданныеВИсходников(Знач ПринудительноПерезаписать)
	
	НайтиФайлМетаданныхКонфигурации();

	// Чтение текщего файла Configuration.xml
	ЧтениеXMLТекущейКонфигурации = Новый ЧтениеXML;
	ЧтениеXMLТекущейКонфигурации.ОткрытьФайл(ФайлМетаданныхКонфигурации.ПолноеИмя);

	ИмяФайлаРезультатаXML = ПолучитьИмяВременногоФайла(".xml");

	// Новый файл Configuration.xml
	ЗаписьXMLНовойКонфигурации = Новый ЗаписьXML;
	ЗаписьXMLНовойКонфигурации.ОткрытьФайл(ИмяФайлаРезультатаXML);
	ЗаписьXMLНовойКонфигурации.ЗаписатьОбъявлениеXML();

	ПараметрыКонфигурации = Новый Структура;

	Для Каждого КлючЗначение Из СоответствиеСвойствXML Цикл 

		ЗначениеОбъекта = ЭтотОбъект[КлючЗначение.Значение];

		Если ЗначениеЗаполнено(ЗначениеОбъекта) 
			ИЛИ ПринудительноПерезаписать Тогда
			ПараметрыКонфигурации.Вставить(КлючЗначение.ключ, ЗначениеОбъекта);
		КонецЕсли;

	КонецЦикла;

	// Чтение в цикла изначальной конфигурации
	Пока ЧтениеXMLТекущейКонфигурации.Прочитать() Цикл

		ТипУзла = ЧтениеXMLТекущейКонфигурации.ТипУзла;

		Лог.Отладка(СтрШаблон("Начало чтение узла: %1", ЧтениеXMLТекущейКонфигурации.Имя));
		Лог.Отладка(СтрШаблон("		  тип узла: %1", ЧтениеXMLТекущейКонфигурации.ТипУзла));

		// Раздел объявления xml пропускаем
		Если ЧтениеXMLТекущейКонфигурации.Имя = "xml" Тогда
			Продолжить;
		КонецЕслИ;


		// Корневые узлы формируем заново
		Если ЧтениеXMLТекущейКонфигурации.ТипУзла = ТипУзлаXML.НачалоЭлемента 
		И (ЧтениеXMLТекущейКонфигурации.Имя = "Configuration" ИЛИ ЧтениеXMLТекущейКонфигурации.Имя = "MetaDataObject") Тогда

			Лог.Отладка(СтрШаблон("Записываю Начало элемента: %1", ЧтениеXMLТекущейКонфигурации.Имя));

			// Формирование разделов в ручную
			ЗаписьXMLНовойКонфигурации.ЗаписатьНачалоЭлемента(ЧтениеXMLТекущейКонфигурации.Имя);

			КоличествоАтрибутов = ЧтениеXMLТекущейКонфигурации.КоличествоАтрибутов();

			Лог.Отладка(СтрШаблон("Количетво атрибутов: %1", КоличествоАтрибутов));

			// Копирование атрибутов узла
			Пока ЧтениеXMLТекущейКонфигурации.СледующийАтрибут() Цикл

				ЗаписьXMLНовойКонфигурации.ЗаписатьАтрибут(ЧтениеXMLТекущейКонфигурации.ЛокальноеИмя, 
										ЧтениеXMLТекущейКонфигурации.URIПространстваИмен, 
										ЧтениеXMLТекущейКонфигурации.Значение);
			КонецЦикла;

			// Дальше обработки нет пошли на новый цикл
			Продолжить;

		КонецЕсли;

		// Все остальные узлы нас не интересуют.
		// Записывем как есть
		Если НЕ (ЧтениеXMLТекущейКонфигурации.ТипУзла = ТипУзлаXML.НачалоЭлемента 
			И ЧтениеXMLТекущейКонфигурации.Имя = "Properties") Тогда
			ЗаписьXMLНовойКонфигурации.ЗаписатьТекущий(ЧтениеXMLТекущейКонфигурации);
		КонецЕсли;	


		// Обход всех элементов в искомом разделе Properties
		Если ЧтениеXMLТекущейКонфигурации.ТипУзла = ТипУзлаXML.НачалоЭлемента 
		И ЧтениеXMLТекущейКонфигурации.Имя = "Properties" Тогда

			Лог.Отладка(СтрШаблон("Записываю Начало элемента: %1",ЧтениеXMLТекущейКонфигурации.Имя));

			// Формируем новый раздел Properties
			ЗаписьXMLНовойКонфигурации.ЗаписатьНачалоЭлемента(ЧтениеXMLТекущейКонфигурации.Имя);

			НеНадоЧитать = Ложь;

			// Чтение до конца свойств конфигурации
			Пока Не (ЧтениеXMLТекущейКонфигурации.ТипУзла = ТипУзлаXML.КонецЭлемента 
			и ЧтениеXMLТекущейКонфигурации.Имя = "Properties") Цикл

				// После записи ЗаписатьТекущий уже выполнено чтение XML далее
				Если Не НеНадоЧитать Тогда
					ЧтениеXMLТекущейКонфигурации.Прочитать();
				КонецЕсли;	

				Ключ = ЧтениеXMLТекущейКонфигурации.ЛокальноеИмя;
				ТипУзла = ЧтениеXMLТекущейКонфигурации.ТипУзла;

				Если ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда

				Лог.Отладка(СтрШаблон("Ищю ключ: %1",Ключ));

					Если НЕ ПараметрыКонфигурации.Свойство(Ключ) Тогда
						ЗаписьXMLНовойКонфигурации.ЗаписатьТекущий(ЧтениеXMLТекущейКонфигурации);
						НеНадоЧитать = Истина;
					Иначе


						// Запишем новые значения для свойств
						НовоеЗначение = ПараметрыКонфигурации[Ключ];

						Лог.Отладка(СтрШаблон("Записываю значение: %1 для свойства %2",НовоеЗначение,Ключ));

						ЗаписьXMLНовойКонфигурации.ЗаписатьНачалоЭлемента(Ключ);
						ЗаписьXMLНовойКонфигурации.ЗаписатьТекст(НовоеЗначение);
						ЗаписьXMLНовойКонфигурации.ЗаписатьКонецЭлемента();

						ЧтениеXMLТекущейКонфигурации.Пропустить();

						НеНадоЧитать = Ложь;

					КонецЕсли;

				КонецЕсли;

			КонецЦикла;

			Если ЧтениеXMLТекущейКонфигурации.ТипУзла = ТипУзлаXML.КонецЭлемента 
			И ЧтениеXMLТекущейКонфигурации.Имя = "Properties" Тогда
				Лог.Отладка(СтрШаблон("Записываю окончание элемента: %1",ЧтениеXMLТекущейКонфигурации.Имя));

				ЗаписьXMLНовойКонфигурации.ЗаписатьКонецЭлемента();
			КонецЕслИ;

		КонецЕсли;

		Если ЧтениеXMLТекущейКонфигурации.ТипУзла = ТипУзлаXML.КонецЭлемента 
			И (ЧтениеXMLТекущейКонфигурации.Имя = "Configuration" ИЛИ ЧтениеXMLТекущейКонфигурации.Имя = "MetaDataObject") Тогда

			ЗаписьXMLНовойКонфигурации.ЗаписатьКонецЭлемента();
		КонецЕсли;

	КонецЦикла;

	ЗаписьXMLНовойКонфигурации.Закрыть();
	ЧтениеXMLТекущейКонфигурации.Закрыть();

	// подменяем файл 
	КопироватьФайл(ИмяФайлаРезультатаXML, ФайлМетаданныхКонфигурации.ПолноеИмя);

КонецПроцедуры