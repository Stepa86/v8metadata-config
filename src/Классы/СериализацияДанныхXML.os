#Использовать logos

Перем Лог;
Перем ИмяПоследнегоАтрибута;
Перем УпроститьЭлементы;

Процедура ПриСозданииОбъекта(Упростить = Истина)

	УпроститьЭлементы = Истина;

	Если ЗначениеЗаполнено(Упростить) Тогда
		УпроститьЭлементы = Упростить;
	КонецЕсли;

	Лог = Логирование.ПолучитьЛог("oscript.lib.parser-xml");

КонецПроцедуры

Функция ПрочитатьИзФайла(Знач ПутьКФайлу) Экспорт
	
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ПутьКФайлу);

	Результат = ПрочитатьXML(Чтение);

	Чтение.Закрыть();

	Возврат Результат;

КонецФункции

Процедура ЗаписатьВФайл(ДанныеЗаписиXML, Знач ПутьКФайлу, Знач ЗаписатьОбъявлениеXML = Ложь) Экспорт
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ПутьКФайлу);

	Если ЗаписатьОбъявлениеXML Тогда
		ЗаписьXML.ЗаписатьОбъявлениеXML();
	КонецЕсли;

	ЗаписатьXML(ЗаписьXML, ДанныеЗаписиXML);

	ЗаписьXML.Закрыть();

КонецПроцедуры

Функция ПрочитатьXML(Знач ЧтениеXML, Знач ИмяКорневогоУзла = "") Экспорт

	РезультатЧтения = Новый Структура;
	Атрибуты = Новый Соответствие;
	Элементы = Новый Соответствие;

	РезультатЧтения.Вставить("Атрибуты", Атрибуты);
	РезультатЧтения.Вставить("Элементы", Элементы);
	
	Лог.Отладка("Начинаю чтение узла <%1> из XML.", ЧтениеXML.ЛокальноеИмя);
	
	ПрочитатьАтрибуты(ЧтениеXML, Атрибуты);
	
	Если Не ЧтениеXML.ТипУзла = ТипУзлаXML.КонецСущности Тогда
		ПрочитатьУзлы(ЧтениеXML, РезультатЧтения, ИмяКорневогоУзла);
	КонецЕсли;
	
	УпроститьРезультатЧтения(РезультатЧтения);

	Лог.Отладка("Чтение узла <%1> закончено.", ЧтениеXML.ЛокальноеИмя);

	Возврат РезультатЧтения;

КонецФункции

#Область Запись_данных_XML

Процедура ЗаписатьXML(Знач ЗаписьXML, Знач ДанныеЗаписиXML) Экспорт

	ЗаписатьЗначениеXML(ЗаписьXML, ДанныеЗаписиXML);

КонецПроцедуры

Процедура ЗаписатьЗначениеXML(Знач ЗаписьXML, Знач ДанныеЗаписиXML, Знач ИмяКорневогоУзла = "")
	
	НачатьЗаписьЭлемента = НЕ ПустаяСтрока(ИмяКорневогоУзла);

	Если НачатьЗаписьЭлемента Тогда
		ЗаписьXML.ЗаписатьНачалоЭлемента(XMLСтрока(ИмяКорневогоУзла));	
	КонецЕсли;

	ТипДанныеЗаписиXML = ТипЗнч(ДанныеЗаписиXML);

	Если ТипДанныеЗаписиXML = Тип("Массив") Тогда
		ЗаписатьМассивВXML(ЗаписьXML, ДанныеЗаписиXML);
	ИначеЕсли ТипДанныеЗаписиXML = Тип("Соответствие") 
		ИЛИ ТипДанныеЗаписиXML = Тип("Структура") Тогда
		ЗаписатьСоответствиеВXML(ЗаписьXML, ДанныеЗаписиXML);
	ИначеЕсли ЭтоПростойТип(ТипДанныеЗаписиXML) Тогда

		ЗаписатьТекст(ЗаписьXML, ДанныеЗаписиXML);

	КонецЕсли;
	
	Если НачатьЗаписьЭлемента Тогда
		ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЕсли;

КонецПроцедуры

Функция ЭтоПростойТип(Знач ТипДанных) 

	Возврат ТипДанных = Тип("Число")
			ИЛИ ТипДанных = Тип("Строка")
			ИЛИ ТипДанных = Тип("Булево")
			// ИЛИ ТипДанных = Тип("Число")
			;
	
КонецФункции

Процедура ЗаписатьАтрибуты(ЗаписьXML, ДанныеАтрибутов)
	
	Если ДанныеАтрибутов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Для каждого КлючЗначение Из ДанныеАтрибутов Цикл
		
		ЗаписьXML.ЗаписатьАтрибут(XMLСтрока(КлючЗначение.Ключ), XMLСтрока(КлючЗначение.Значение));

	КонецЦикла;

КонецПроцедуры

Процедура ЗаписатьСекцияCDATA(ЗаписьXML, ДанныеСекцияCDATA)
	
	Если НЕ ЗначениеЗаполнено(ДанныеСекцияCDATA) Тогда
		Возврат;
	КонецЕсли;

	ЗаписьXML.ЗаписатьСекциюCDATA(ДанныеСекцияCDATA);

КонецПроцедуры

Процедура ЗаписатьКомментарий(ЗаписьXML, Комментарий)
	
	Если НЕ ЗначениеЗаполнено(Комментарий) Тогда
		Возврат;
	КонецЕсли;

	ЗаписьXML.ЗаписатьСекциюCDATA(XMLСтрока(Комментарий));

КонецПроцедуры

Процедура ЗаписатьТекст(ЗаписьXML, Текст)
	
	Если НЕ ЗначениеЗаполнено(Текст) Тогда
		Возврат;
	КонецЕсли;

	ЗаписьXML.ЗаписатьТекст(XMLСтрока(Текст));

КонецПроцедуры

Процедура ЗаписатьМассивВXML(ЗаписьXML, Знач ДанныеМассива)
	
	Для каждого ЭлементМассива Из ДанныеМассива Цикл
		ЗаписатьЗначениеXML(ЗаписьXML, ЭлементМассива);
	КонецЦикла;

КонецПроцедуры

Процедура ЗаписатьСоответствиеВXML(ЗаписьXML, ДанныеСоответствия)
	
	Для каждого КлючЗначение Из ДанныеСоответствия Цикл

		Если КлючЗначение.Ключ = "Атрибуты" Тогда
			ЗаписатьАтрибуты(ЗаписьXML, КлючЗначение.Значение);
			Продолжить;
		КонецЕсли;
	
		Если КлючЗначение.Ключ = "Комментарий" Тогда
			ЗаписатьКомментарий(ЗаписьXML, КлючЗначение.Значение);
			Продолжить;
		КонецЕсли;
	
		Если КлючЗначение.Ключ = "CDATA" Тогда
			ЗаписатьСекцияCDATA(ЗаписьXML, КлючЗначение.Значение);
			Продолжить;
		КонецЕсли;
	
		Если КлючЗначение.Ключ = "Значение" Тогда
			ЗаписатьТекст(ЗаписьXML, КлючЗначение.Значение);
			Продолжить;
		КонецЕсли;
	
		Если КлючЗначение.Ключ = "Элементы" Тогда
			ЗаписатьЗначениеXML(ЗаписьXML, КлючЗначение.Значение);
			Продолжить;
		КонецЕсли;

		ЗаписатьЗначениеXML(ЗаписьXML, КлючЗначение.Значение, КлючЗначение.Ключ);

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область Чтение_данных_XML

Процедура УпроститьРезультатЧтения(РезультатЧтения)
	
	Если НЕ УпроститьЭлементы Тогда
		Возврат;
	КонецЕсли;

	Если РезультатЧтения["Атрибуты"].Количество() = 0 Тогда
		РезультатЧтения.Удалить("Атрибуты");
	КонецЕсли;

	Если РезультатЧтения["Элементы"].Количество() = 0 Тогда
		РезультатЧтения.Удалить("Элементы");
	КонецЕсли;

	МожноУпростить = РезультатЧтения.Количество() = 1;

	Если МожноУпростить Тогда
		Если РезультатЧтения.Свойство("Значение") Тогда
			РезультатЧтения = РезультатЧтения.Значение;
		ИначеЕсли РезультатЧтения.Свойство("Элементы") Тогда
			РезультатЧтения = РезультатЧтения.Элементы;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПрочитатьАтрибуты(Знач ЧтениеXML, Атрибуты)
	
	Если ЧтениеXML.КоличествоАтрибутов() = 0 Тогда
		ИмяПоследнегоАтрибута = "";
		Возврат;
	КонецЕсли;

	Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
		
		Лог.Отладка("Прочитано значение <%1> атрибута <%2>", ЧтениеXML.Значение, ЧтениеXML.Имя);
		Атрибуты.Вставить(СокрЛП(ЧтениеXML.Имя), СокрЛП(ЧтениеXML.Значение));
		ИмяПоследнегоАтрибута = ЧтениеXML.Имя;
	КонецЦикла;

КонецПроцедуры

Процедура ПрочитатьУзлы(Знач ЧтениеXML, КорневойУзел, Знач ИмяКорневогоУзла)
		
	Пока ЧтениеXML.Прочитать() Цикл
		
		Лог.Отладка("Тип узла <%1>", ЧтениеXML.ТипУзла);
		Лог.Отладка("Имя узла <%1>", ЧтениеXML.ЛокальноеИмя);
			
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента 
			И (ЧтениеXML.ЛокальноеИмя = ИмяКорневогоУзла
			 ИЛИ ЧтениеXML.ЛокальноеИмя = ИмяПоследнегоАтрибута) Тогда
			Прервать;
		КонецЕсли;

		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			ИмяНовогоУзла = ЧтениеXML.ЛокальноеИмя;
			Лог.Отладка("Выбран узел <%1>", ИмяНовогоУзла);
			СоответствиеУзла = ПрочитатьXML(ЧтениеXML, ИмяНовогоУзла);
			ВставитьЭлементУзла(КорневойУзел, ИмяНовогоУзла, СоответствиеУзла);

		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
		
			ЗначениеСвойства = ЧтениеXML.Значение;
			Лог.Отладка("Прочитано значение " + ЗначениеСвойства);
			КорневойУзел.Вставить("Значение", ЗначениеСвойства);
		
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Комментарий Тогда
			ЗначениеСвойства = ЧтениеXML.Значение;
			Лог.Отладка("Прочитан комментарий " + ЗначениеСвойства);
			КорневойУзел.Вставить("Комментарий", ЗначениеСвойства);
		
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.СекцияCDATA Тогда
			ЗначениеСвойства = ЧтениеXML.Значение;
			Лог.Отладка("Прочитана СекцияCDATA " + ЗначениеСвойства);
			КорневойУзел.Вставить("CDATA", ЗначениеСвойства);
		
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВставитьЭлементУзла(КорневойУзел, Знач ИмяНовогоУзла, СоответствиеУзла)
	
	ТипЭлементовУзла = ТипЗнч(КорневойУзел.Элементы);

	Если ТипЭлементовУзла = Тип("Массив") Тогда
		КорневойУзел.Элементы.Добавить(СоответствиеУзла);
	ИначеЕсли ТипЭлементовУзла = Тип("Соответствие") Тогда
		
		УжеЕстьЗначение = НЕ КорневойУзел.Элементы[ИмяНовогоУзла] = Неопределено;

		Если УжеЕстьЗначение Тогда
			МассивЭлементов = Новый Массив;
		
			Для каждого КлючЗначение Из КорневойУзел.Элементы Цикл
				СоответствиеТекущегоЭлемента = Новый Соответствие();
				СоответствиеТекущегоЭлемента.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
				МассивЭлементов.Добавить(СоответствиеТекущегоЭлемента);
			КонецЦикла;

			СоответствиеТекущегоЭлемента = Новый Соответствие();
			СоответствиеТекущегоЭлемента.Вставить(ИмяНовогоУзла, СоответствиеУзла);
				
			МассивЭлементов.Добавить(СоответствиеТекущегоЭлемента);

			КорневойУзел.Элементы  = МассивЭлементов;
		
		Иначе

			КорневойУзел.Элементы.Вставить(ИмяНовогоУзла, СоответствиеУзла);

		КонецЕсли;
	Иначе
		
		ВызватьИсключение СтрШаблон("Пришел не корректный тип значения <%1>", ТипЭлементовУзла);
	
	КонецЕсли;

КонецПроцедуры

#КонецОбласти