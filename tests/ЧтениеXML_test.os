#Использовать "../src"
#Использовать asserts
#Использовать logos
#Использовать tempfiles
#Использовать json

Перем юТест;
Перем Лог;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт

	юТест = Тестирование;

	ИменаТестов = Новый Массив;

	ИменаТестов.Добавить("ТестДолжен_ПроверитьЧтениеXMLВСоответствие");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьЗаписьXMLИзСоответствия");

	Возврат ИменаТестов;

КонецФункции



Процедура ТестДолжен_ПроверитьЧтениеXMLВСоответствие() Экспорт
	Лог = Логирование.ПолучитьЛог("oscript.lib.xml-reader-test");
	Лог.УстановитьУровень(УровниЛога.Отладка);

	
	// ФейковыйФайл = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "fake-rules.xml");
	ФейковыйФайл = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "fake-Configuration.xml");
	// ФейковыйФайл = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "test-file.xml");
	
	
	ПроцессорXML = Новый СериализацияДанныхXML();
	
	Соотв = ПроцессорXML.ПрочитатьИзФайла(ФейковыйФайл);

	ПоказатьНастройкиВРежимеОтладки(Соотв);

	Утверждения.ПроверитьРавенство(Соотв["ФайлПФР"][0]["ИмяФайла"]["НазваниеФормата"], "fb2", "Результат должен совпадать с ожиданиями.");
	// Утверждения.ПроверитьРавенство(МетаданныеКонфигурацииXML.АдресОбновлений, "", "Результат должен совпадать с ожиданиями.");
	// Утверждения.ПроверитьРавенство(МетаданныеКонфигурацииXML.Комментарий, "Программа для разработки правил обмена данными", "Результат должен совпадать с ожиданиями.");
	// Утверждения.ПроверитьРавенство(МетаданныеКонфигурацииXML.Наименование, "КонвертацияДанныхРедакция21", "Результат должен совпадать с ожиданиями.");
	// Утверждения.ПроверитьРавенство(МетаданныеКонфигурацииXML.Поставщик, "Фирма ""1С""", "Результат должен совпадать с ожиданиями.");
	
	

КонецПроцедуры


Процедура ТестДолжен_ПроверитьЗаписьXMLИзСоответствия() Экспорт
	
	Лог = Логирование.ПолучитьЛог("oscript.lib.xml-reader-test");
	Лог.УстановитьУровень(УровниЛога.Отладка);

	
	// ФейковыйФайл = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "fake-rules.xml");
	ФейковыйФайл = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "fake-Configuration.xml");
	// ФейковыйФайл = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "test-file.xml");
	
	
	ПроцессорXML = Новый СериализацияДанныхXML();
	
	Соотв = ПроцессорXML.ПрочитатьИзФайла(ФейковыйФайл);

	ВременныйФайл = ВременныеФайлы.НовоеИмяФайла("xml");

	ПроцессорXML.ЗаписатьВФайл(Соотв, ВременныйФайл);

	Сообщить(ВременныйФайл);

КонецПроцедуры

Процедура ПоказатьНастройкиВРежимеОтладки(ЗначенияПараметров, Знач Родитель = "") Экспорт
	
	Если Не Лог.Уровень() = УровниЛога.Отладка Тогда
		Возврат;
	КонецЕсли;

	Если Родитель = "" Тогда
		Лог.Отладка("	Тип параметров %1", ТипЗнч(ЗначенияПараметров));
	КонецЕсли;

	Если ТипЗнч(ЗначенияПараметров) = Тип("Массив") Тогда

		Для ИИ = 0 По ЗначенияПараметров.ВГраница() Цикл
			ПоказатьНастройкиВРежимеОтладки(ЗначенияПараметров[ИИ], СтрШаблон("%1.%2", Родитель, ИИ));
		КонецЦикла;
	
	ИначеЕсли ТипЗнч(ЗначенияПараметров) = Тип("Структура")
		ИЛИ ТипЗнч(ЗначенияПараметров) = Тип("Соответствие") Тогда

		Если ЗначенияПараметров.Количество() = 0 Тогда
			Лог.Отладка("	Коллекция параметров пуста для <%1> ", Родитель);
		КонецЕсли;

		Для каждого Элемент Из ЗначенияПараметров Цикл
	
			Если Не ПустаяСтрока(Родитель) Тогда
				ПредставлениеКлюча  = СтрШаблон("%1.%2", Родитель, Элемент.Ключ);
			Иначе
				ПредставлениеКлюча = Элемент.Ключ;
			КонецЕсли;
		
			Если ТипЗнч(Элемент.Значение) = Тип("Структура") 
				ИЛИ ТипЗнч(Элемент.Значение) = Тип("Соответствие")  Тогда
		
				ПоказатьНастройкиВРежимеОтладки(Элемент.Значение, ПредставлениеКлюча);	
			
			ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Массив") Тогда
				
				Лог.Отладка("	параметр <%1> = Массив.<%2>", ПредставлениеКлюча, Элемент.Значение.Количество());
				
				ПоказатьНастройкиВРежимеОтладки(Элемент.Значение, ПредставлениеКлюча);	
			
			Иначе
				Лог.Отладка("	параметр <%1> = <%2>", ПредставлениеКлюча, Элемент.Значение);
		
			КонецЕсли;
			
		КонецЦикла;	
	КонецЕсли;

	Лог.Отладка("	параметр <%1> = <%2>", Родитель, ЗначенияПараметров);
	
КонецПроцедуры
