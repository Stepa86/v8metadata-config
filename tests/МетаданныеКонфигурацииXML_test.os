#Использовать "../src"
#Использовать asserts
#Использовать logos
#Использовать tempfiles
#Использовать json

Перем юТест;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт

	юТест = Тестирование;

	ИменаТестов = Новый Массив;

	ИменаТестов.Добавить("ТестДолжен_ПроверитьЧтениеМетаданныхКонфигурации");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьЗаписьМетаданныхКонфигурации");
	// ИменаТестов.Добавить("ТестДолжен_ПроверитьЧтениеПроизвольныхПолейКонструтора");
	// ИменаТестов.Добавить("ТестДолжен_ПроверитьЗаполнениеОтсутствующихПараметров");
	// ИменаТестов.Добавить("ТестДолжен_ПроверитьПарсингМассивовОпций");

	Возврат ИменаТестов;

КонецФункции

Процедура ТестДолжен_ПроверитьЧтениеМетаданныхКонфигурации() Экспорт

	КаталогИсходников = ВременныеФайлы.СоздатьКаталог();

	ФайлИсходников = ОбъединитьПути(КаталогИсходников, "Configuration.xml");

	ФейковыйФайл = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "fake-Configuration.xml");
	
	// подменяем файл 
	КопироватьФайл(ФейковыйФайл, ФайлИсходников);

	МетаданныеКонфигурацииXML = Новый МетаданныеКонфигурацииXML();
	МетаданныеКонфигурацииXML.УстановитьКаталогИсходныхФайлов(КаталогИсходников);

	МетаданныеКонфигурацииXML.ПрочитатьМетаданные();

	Утверждения.ПроверитьРавенство(МетаданныеКонфигурацииXML.Версия, "2.1.8.2", "Результат должен совпадать с ожиданиями.");
	Утверждения.ПроверитьРавенство(МетаданныеКонфигурацииXML.АдресОбновлений, "", "Результат должен совпадать с ожиданиями.");
	Утверждения.ПроверитьРавенство(МетаданныеКонфигурацииXML.Комментарий, "Программа для разработки правил обмена данными", "Результат должен совпадать с ожиданиями.");
	Утверждения.ПроверитьРавенство(МетаданныеКонфигурацииXML.Наименование, "КонвертацияДанныхРедакция21", "Результат должен совпадать с ожиданиями.");
	Утверждения.ПроверитьРавенство(МетаданныеКонфигурацииXML.Поставщик, "Фирма ""1С""", "Результат должен совпадать с ожиданиями.");
	
	ВременныеФайлы.Удалить();

КонецПроцедуры


Процедура ТестДолжен_ПроверитьЗаписьМетаданныхКонфигурации() Экспорт
	

КонецПроцедуры